import {
  _,
  d,
  l
} from "./chunk-WLTPTIU4.js";

// .yarn/cache/preact-npm-10.6.1-ca02621419-930fbf57d9.zip/node_modules/preact/devtools/dist/devtools.module.js
typeof window != "undefined" && window.__PREACT_DEVTOOLS__ && window.__PREACT_DEVTOOLS__.attachPreact("10.6.1", l, { Fragment: d, Component: _ });

// .yarn/cache/preact-npm-10.6.1-ca02621419-930fbf57d9.zip/node_modules/preact/debug/dist/debug.module.js
var o = {};
function r() {
  o = {};
}
function a(n) {
  return n.type === d ? "Fragment" : typeof n.type == "function" ? n.type.displayName || n.type.name : typeof n.type == "string" ? n.type : "#text";
}
var i = [];
var s = [];
function c() {
  return i.length > 0 ? i[i.length - 1] : null;
}
var l2 = false;
function u(n) {
  return typeof n.type == "function" && n.type != d;
}
function f(n) {
  for (var t = [n], e = n; e.__o != null; )
    t.push(e.__o), e = e.__o;
  return t.reduce(function(n2, t2) {
    n2 += "  in " + a(t2);
    var e2 = t2.__source;
    return e2 ? n2 += " (at " + e2.fileName + ":" + e2.lineNumber + ")" : l2 || (l2 = true, console.warn("Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.")), n2 + "\n";
  }, "");
}
var p = typeof WeakMap == "function";
var d2 = _.prototype.setState;
_.prototype.setState = function(n, t) {
  return this.__v == null ? this.state == null && console.warn('Calling "this.setState" inside the constructor of a component is a no-op and might be a bug in your application. Instead, set "this.state = {}" directly.\n\n' + f(c())) : this.__P == null && console.warn(`Can't call "this.setState" on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.

` + f(this.__v)), d2.call(this, n, t);
};
var h = _.prototype.forceUpdate;
function y(n) {
  var t = n.props, e = a(n), o2 = "";
  for (var r2 in t)
    if (t.hasOwnProperty(r2) && r2 !== "children") {
      var i2 = t[r2];
      typeof i2 == "function" && (i2 = "function " + (i2.displayName || i2.name) + "() {}"), i2 = Object(i2) !== i2 || i2.toString ? i2 + "" : Object.prototype.toString.call(i2), o2 += " " + r2 + "=" + JSON.stringify(i2);
    }
  var s2 = t.children;
  return "<" + e + o2 + (s2 && s2.length ? ">..</" + e + ">" : " />");
}
_.prototype.forceUpdate = function(n) {
  return this.__v == null ? console.warn('Calling "this.forceUpdate" inside the constructor of a component is a no-op and might be a bug in your application.\n\n' + f(c())) : this.__P == null && console.warn(`Can't call "this.forceUpdate" on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.

` + f(this.__v)), h.call(this, n);
}, function() {
  !function() {
    var t2 = l.__b, e2 = l.diffed, o2 = l.__, r3 = l.vnode, a2 = l.__r;
    l.diffed = function(n) {
      u(n) && s.pop(), i.pop(), e2 && e2(n);
    }, l.__b = function(n) {
      u(n) && i.push(n), t2 && t2(n);
    }, l.__ = function(n, t3) {
      s = [], o2 && o2(n, t3);
    }, l.vnode = function(n) {
      n.__o = s.length > 0 ? s[s.length - 1] : null, r3 && r3(n);
    }, l.__r = function(n) {
      u(n) && s.push(n), a2 && a2(n);
    };
  }();
  var t = false, e = l.__b, r2 = l.diffed, c2 = l.vnode, l3 = l.__e, d3 = l.__, h2 = l.__h, m = p ? { useEffect: new WeakMap(), useLayoutEffect: new WeakMap(), lazyPropTypes: new WeakMap() } : null, v = [];
  l.__e = function(n, t2, e2) {
    if (t2 && t2.__c && typeof n.then == "function") {
      var o2 = n;
      n = new Error("Missing Suspense. The throwing component was: " + a(t2));
      for (var r3 = t2; r3; r3 = r3.__)
        if (r3.__c && r3.__c.__c) {
          n = o2;
          break;
        }
      if (n instanceof Error)
        throw n;
    }
    try {
      l3(n, t2, e2), typeof n.then != "function" && setTimeout(function() {
        throw n;
      });
    } catch (n2) {
      throw n2;
    }
  }, l.__ = function(n, t2) {
    if (!t2)
      throw new Error("Undefined parent passed to render(), this is the second argument.\nCheck if the element is available in the DOM/has the correct id.");
    var e2;
    switch (t2.nodeType) {
      case 1:
      case 11:
      case 9:
        e2 = true;
        break;
      default:
        e2 = false;
    }
    if (!e2) {
      var o2 = a(n);
      throw new Error("Expected a valid HTML node as a second argument to render.	Received " + t2 + " instead: render(<" + o2 + " />, " + t2 + ");");
    }
    d3 && d3(n, t2);
  }, l.__b = function(n) {
    var r3 = n.type, i2 = function n2(t2) {
      return t2 ? typeof t2.type == "function" ? n2(t2.__) : t2 : {};
    }(n.__);
    if (t = true, r3 === void 0)
      throw new Error("Undefined component passed to createElement()\n\nYou likely forgot to export your component or might have mixed up default and named imports" + y(n) + "\n\n" + f(n));
    if (r3 != null && typeof r3 == "object") {
      if (r3.__k !== void 0 && r3.__e !== void 0)
        throw new Error("Invalid type passed to createElement(): " + r3 + "\n\nDid you accidentally pass a JSX literal as JSX twice?\n\n  let My" + a(n) + " = " + y(r3) + ";\n  let vnode = <My" + a(n) + " />;\n\nThis usually happens when you export a JSX literal and not the component.\n\n" + f(n));
      throw new Error("Invalid type passed to createElement(): " + (Array.isArray(r3) ? "array" : r3));
    }
    if (r3 !== "thead" && r3 !== "tfoot" && r3 !== "tbody" || i2.type === "table" ? r3 === "tr" && i2.type !== "thead" && i2.type !== "tfoot" && i2.type !== "tbody" && i2.type !== "table" ? console.error("Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent." + y(n) + "\n\n" + f(n)) : r3 === "td" && i2.type !== "tr" ? console.error("Improper nesting of table. Your <td> should have a <tr> parent." + y(n) + "\n\n" + f(n)) : r3 === "th" && i2.type !== "tr" && console.error("Improper nesting of table. Your <th> should have a <tr>." + y(n) + "\n\n" + f(n)) : console.error("Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent." + y(n) + "\n\n" + f(n)), n.ref !== void 0 && typeof n.ref != "function" && typeof n.ref != "object" && !("$$typeof" in n))
      throw new Error(`Component's "ref" property should be a function, or an object created by createRef(), but got [` + typeof n.ref + "] instead\n" + y(n) + "\n\n" + f(n));
    if (typeof n.type == "string") {
      for (var s2 in n.props)
        if (s2[0] === "o" && s2[1] === "n" && typeof n.props[s2] != "function" && n.props[s2] != null)
          throw new Error(`Component's "` + s2 + '" property should be a function, but got [' + typeof n.props[s2] + "] instead\n" + y(n) + "\n\n" + f(n));
    }
    if (typeof n.type == "function" && n.type.propTypes) {
      if (n.type.displayName === "Lazy" && m && !m.lazyPropTypes.has(n.type)) {
        var c3 = "PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ";
        try {
          var l4 = n.type();
          m.lazyPropTypes.set(n.type, true), console.warn(c3 + "Component wrapped in lazy() is " + a(l4));
        } catch (n2) {
          console.warn(c3 + "We will log the wrapped component's name once it is loaded.");
        }
      }
      var u2 = n.props;
      n.type.__f && delete (u2 = function(n2, t2) {
        for (var e2 in t2)
          n2[e2] = t2[e2];
        return n2;
      }({}, u2)).ref, function(n2, t2, e2, r4, a2) {
        Object.keys(n2).forEach(function(e3) {
          var i3;
          try {
            i3 = n2[e3](t2, e3, r4, "prop", null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
          } catch (n3) {
            i3 = n3;
          }
          !i3 || i3.message in o || (o[i3.message] = true, console.error("Failed prop type: " + i3.message + (a2 && "\n" + a2() || "")));
        });
      }(n.type.propTypes, u2, 0, a(n), function() {
        return f(n);
      });
    }
    e && e(n);
  }, l.__h = function(n, e2, o2) {
    if (!n || !t)
      throw new Error("Hook can only be invoked from render methods.");
    h2 && h2(n, e2, o2);
  };
  var b = function(n, t2) {
    return { get: function() {
      var e2 = "get" + n + t2;
      v && v.indexOf(e2) < 0 && (v.push(e2), console.warn("getting vnode." + n + " is deprecated, " + t2));
    }, set: function() {
      var e2 = "set" + n + t2;
      v && v.indexOf(e2) < 0 && (v.push(e2), console.warn("setting vnode." + n + " is not allowed, " + t2));
    } };
  }, w = { nodeName: b("nodeName", "use vnode.type"), attributes: b("attributes", "use vnode.props"), children: b("children", "use vnode.props.children") }, g = Object.create({}, w);
  l.vnode = function(n) {
    var t2 = n.props;
    if (n.type !== null && t2 != null && ("__source" in t2 || "__self" in t2)) {
      var e2 = n.props = {};
      for (var o2 in t2) {
        var r3 = t2[o2];
        o2 === "__source" ? n.__source = r3 : o2 === "__self" ? n.__self = r3 : e2[o2] = r3;
      }
    }
    n.__proto__ = g, c2 && c2(n);
  }, l.diffed = function(n) {
    if (n.__k && n.__k.forEach(function(t2) {
      if (t2 && t2.type === void 0) {
        delete t2.__, delete t2.__b;
        var e3 = Object.keys(t2).join(",");
        throw new Error("Objects are not valid as a child. Encountered an object with the keys {" + e3 + "}.\n\n" + f(n));
      }
    }), t = false, r2 && r2(n), n.__k != null)
      for (var e2 = [], o2 = 0; o2 < n.__k.length; o2++) {
        var a2 = n.__k[o2];
        if (a2 && a2.key != null) {
          var i2 = a2.key;
          if (e2.indexOf(i2) !== -1) {
            console.error('Following component has two or more children with the same key attribute: "' + i2 + '". This may cause glitches and misbehavior in rendering process. Component: \n\n' + y(n) + "\n\n" + f(n));
            break;
          }
          e2.push(i2);
        }
      }
  };
}();
export {
  r as resetPropWarnings
};
//# sourceMappingURL=preact_debug.js.map
